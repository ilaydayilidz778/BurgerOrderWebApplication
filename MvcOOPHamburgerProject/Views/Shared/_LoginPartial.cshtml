@using Microsoft.AspNetCore.Identity
@using MvcOOPHamburgerProject.Data.Entities.Concrete
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="dropdown-menu dropdown-menu-dark">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="dropdown-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="dropdown-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
        @if (User.IsInRole("Administrator"))
        {
            <li class="dropdown-item">
                <a  asp-area="Admin" asp-controller="Dashboard" asp-action="Index" title="Go to Admin Dashboard">Administrator</a>
            </li>
        }
    }
    else
    {
        <li class="dropdown-item">
            <a  asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="dropdown-item">
            <a asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>