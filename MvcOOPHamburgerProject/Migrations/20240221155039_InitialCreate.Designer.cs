// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcOOPHamburgerProject.Data.Context;

#nullable disable

namespace MvcOOPHamburgerProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240221155039_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "We offer hamburgers prepared with the freshest and highest quality ingredients in our restaurant. Our aim is to provide our guests with a delicious and healthy dining experience.",
                            ImageUrl = "about1.jpg",
                            SubTitle = "Offering Delicious and Healthy Hamburgers",
                            Title = "Who We Are?"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Our mission is to provide the best service to our customers and exceed their expectations. We prioritize customer satisfaction with our hamburgers made with quality ingredients and our sincere service approach.",
                            ImageUrl = "about2.jpg",
                            SubTitle = "Service Focused on Customer Satisfaction",
                            Title = "Our Mission"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Our vision is to be an innovative and leading brand in the industry and ensure sustainable growth. We aim to win the admiration of our customers by constantly offering new flavors and experiences.",
                            ImageUrl = "about3.jpg",
                            SubTitle = "Innovative and Sustainable Growth",
                            Title = "Our Vision"
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Savor the succulent taste of our juicy burger creations, crafted with premium ingredients and grilled to perfection.",
                            ImageUrl = "CategoryBurger.png",
                            Name = "Burger"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Indulge your sweet tooth with our delightful array of desserts, ranging from decadent cakes to mouthwatering pastries.",
                            ImageUrl = "CategoryDessert.png",
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Explore our diverse selection of high-quality ingredients, sourced from trusted suppliers to elevate your culinary creations.",
                            ImageUrl = "CategoryIngredient.png",
                            Name = "Ingredient"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Satiate your cravings on the go with our convenient snack options, perfect for satisfying hunger anytime, anywhere.",
                            ImageUrl = "CategorySnack.png",
                            Name = "Snack"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Quench your thirst with our refreshing range of beverages, from classic sodas to exotic fruit-infused cocktails.",
                            ImageUrl = "CategoryDrink.png",
                            Name = "Drink"
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adana"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adıyaman"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Afyonkarahisar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ağrı"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Amasya"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Aydın"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bilecik"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Bingöl"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bitlis"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Bolu"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Burdur"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Çankırı"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Çorum"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Denizli"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Elazığ"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Erzincan"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Erzurum"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Gaziantep"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Giresun"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Gümüşhane"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Hakkari"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Hatay"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Isparta"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Mersin"
                        },
                        new
                        {
                            Id = 34,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 35,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Kars"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Kayseri"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Kırşehir"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Kocaeli"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Konya"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Malatya"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Manisa"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Kahramanmaraş"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Mardin"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Muş"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Niğde"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Ordu"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Rize"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Sakarya"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Samsun"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Siirt"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Tekirdağ"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Tunceli"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Uşak"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Yozgat"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Zonguldak"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Aksaray"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Bayburt"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Karaman"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Kırıkkale"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Batman"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Şırnak"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Bartın"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Ardahan"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Iğdır"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Yalova"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Karabük"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Kilis"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Osmaniye"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Düzce"
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "BigMacMenu.jpg",
                            Name = "Big Mac Menu",
                            Price = 59.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "DoubleBigMacMenu.jpg",
                            Name = "Double Big Mac Menu",
                            Price = 92.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "DoubleMcEconomicalMenu.jpg",
                            Name = "Double McEconomical Menu",
                            Price = 51.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "TripleMcEconomicalMenu.jpg",
                            Name = "Triple McEconomical Menu",
                            Price = 74.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "BurgerwithMeatandCrispyChickenOfferMenu.jpg",
                            Name = "Burger with Meat and Crispy Chicken Offer Menu",
                            Price = 13.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "DoubleBigTastyMenu.jpg",
                            Name = "Double Big Tasty Menu",
                            Price = 54.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "GamerMenu.jpg",
                            Name = "Gamer Menu",
                            Price = 86.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "LegendaryDuo(BigMac+McChicken).jpg",
                            Name = "Legendary Duo (Big Mac + McChicken) Menu",
                            Price = 71.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "TripleBigMacOffer.jpg",
                            Name = "Triple Big Mac Offer",
                            Price = 65.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "DoubleMeatballBurgerMenu.jpg",
                            Name = "Double Meatball Burger Menu",
                            Price = 53.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "MeatballBurgerOfferMenu.jpg",
                            Name = "Meatball Burger Offer Menu",
                            Price = 51.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "CrispyChickenOfferMenu.jpg",
                            Name = "Crispy Chicken Offer Menu",
                            Price = 60.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "ClassicBigTastyMenu.jpg",
                            Name = "Classic Big Tasty Menu",
                            Price = 52.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "ChickenBigTastyMenu.jpg",
                            Name = "Chicken Big Tasty Menu",
                            Price = 83.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "NationalBurgerMenu.jpg",
                            Name = "National Burger Menu",
                            Price = 91.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "DoubleSpicyChicken(Classic)Menu.jpg",
                            Name = "Double Spicy Chicken (Classic) Menu",
                            Price = 80.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.MenuProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductId");

                    b.ToTable("MenuProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 1,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 1,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 2,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 2,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            MenuId = 2,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 7,
                            MenuId = 2,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            MenuId = 3,
                            ProductId = 9,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            MenuId = 3,
                            ProductId = 9,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            MenuId = 3,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 11,
                            MenuId = 3,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            MenuId = 3,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 13,
                            MenuId = 3,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            MenuId = 4,
                            ProductId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            MenuId = 4,
                            ProductId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            MenuId = 4,
                            ProductId = 8,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 17,
                            MenuId = 4,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 18,
                            MenuId = 4,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 19,
                            MenuId = 4,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 20,
                            MenuId = 4,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 21,
                            MenuId = 5,
                            ProductId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            MenuId = 5,
                            ProductId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            MenuId = 5,
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 24,
                            MenuId = 5,
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            MenuId = 5,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            MenuId = 5,
                            ProductId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 27,
                            MenuId = 5,
                            ProductId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 28,
                            MenuId = 5,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 29,
                            MenuId = 5,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 30,
                            MenuId = 6,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 31,
                            MenuId = 6,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 32,
                            MenuId = 6,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 33,
                            MenuId = 6,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            MenuId = 7,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            MenuId = 7,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 36,
                            MenuId = 7,
                            ProductId = 14,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 37,
                            MenuId = 7,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 38,
                            MenuId = 8,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            MenuId = 8,
                            ProductId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 40,
                            MenuId = 8,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 41,
                            MenuId = 8,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 42,
                            MenuId = 9,
                            ProductId = 6,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 43,
                            MenuId = 9,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 44,
                            MenuId = 9,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 45,
                            MenuId = 10,
                            ProductId = 15,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 46,
                            MenuId = 10,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            MenuId = 10,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 48,
                            MenuId = 11,
                            ProductId = 11,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 49,
                            MenuId = 11,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 50,
                            MenuId = 11,
                            ProductId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 51,
                            MenuId = 11,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 52,
                            MenuId = 12,
                            ProductId = 12,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 53,
                            MenuId = 12,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 54,
                            MenuId = 12,
                            ProductId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 55,
                            MenuId = 12,
                            ProductId = 50,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 56,
                            MenuId = 13,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 57,
                            MenuId = 13,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 58,
                            MenuId = 13,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 59,
                            MenuId = 14,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 60,
                            MenuId = 14,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 61,
                            MenuId = 14,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 62,
                            MenuId = 15,
                            ProductId = 16,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 63,
                            MenuId = 15,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 64,
                            MenuId = 15,
                            ProductId = 50,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 65,
                            MenuId = 16,
                            ProductId = 17,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 66,
                            MenuId = 16,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 67,
                            MenuId = 16,
                            ProductId = 50,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ImageUrl = "ClassicBigTasty.jpg",
                            Name = "Classic Big Tasty",
                            Price = 9.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ImageUrl = "ChickenBigTasty.jpg",
                            Name = "Chicken Big Tasty",
                            Price = 10.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ImageUrl = "DoubleSpicyChicken(Classic).jpg",
                            Name = "Double Spicy Chicken (Classic)",
                            Price = 12.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            ImageUrl = "NationalBurger.jpg",
                            Name = "National Burger",
                            Price = 8.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            ImageUrl = "SpicyChicken(Classic).jpg",
                            Name = "Spicy Chicken (Classic)",
                            Price = 7.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            ImageUrl = "McChicken.jpg",
                            Name = "McChicken",
                            Price = 6.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            ImageUrl = "CrispyChickenBurger.jpg",
                            Name = "Crispy Chicken Burger",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            ImageUrl = "QuarterPounder.jpg",
                            Name = "Quarter Pounder",
                            Price = 8.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            ImageUrl = "DoubleBeefBurger.jpg",
                            Name = "Double Beef Burger",
                            Price = 11.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            ImageUrl = "BeefBurger.jpg",
                            Name = "Beef Burger",
                            Price = 7.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            ImageUrl = "DabaDabaBurger.jpg",
                            Name = "Daba Daba Burger",
                            Price = 10.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            ImageUrl = "DoubleBigMac.jpg",
                            Name = "Double Big Mac",
                            Price = 12.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            ImageUrl = "DoubleCheeseburger.jpg",
                            Name = "Double Cheeseburger",
                            Price = 9.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            ImageUrl = "DoubleMcChicken.jpg",
                            Name = "Double McChicken",
                            Price = 10.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            ImageUrl = "DoubleQuarterPounder.jpg",
                            Name = "Double Quarter Pounder",
                            Price = 11.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            ImageUrl = "BigMac.jpg",
                            Name = "Big Mac",
                            Price = 9.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            ImageUrl = "Hamburger.jpg",
                            Name = "Hamburger",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            ImageUrl = "Cheeseburger.jpg",
                            Name = "Cheeseburger",
                            Price = 6.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            ImageUrl = "ForestFruitMuffin.jpg",
                            Name = "Forest Fruit Muffin",
                            Price = 3.79m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            ImageUrl = "StrawberryFilledWhiteChocolateDonut.jpg",
                            Name = "Strawberry Filled White Chocolate Donut",
                            Price = 4.29m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            ImageUrl = "StrawberryWhiteChocolateDecoratedDonut.jpg",
                            Name = "Strawberry White Chocolate Decorated Donut",
                            Price = 4.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            ImageUrl = "ChocolateCake.jpg",
                            Name = "Chocolate Cake",
                            Price = 6.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            ImageUrl = "HazelnutCreamFilledCocoaDonut.jpg",
                            Name = "Hazelnut Cream Filled Cocoa Donut",
                            Price = 3.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            ImageUrl = "RaspberryMuffin.jpg",
                            Name = "Raspberry Muffin",
                            Price = 3.79m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            ImageUrl = "RaspberryCheesecake.jpg",
                            Name = "Raspberry Cheesecake",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            ImageUrl = "Brownie.jpg",
                            Name = "Brownie",
                            Price = 4.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            ImageUrl = "ChocolateMuffin.jpg",
                            Name = "Chocolate Muffin",
                            Price = 3.79m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            ImageUrl = "BlueberryCheesecake.jpg",
                            Name = "Blueberry Cheesecake",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            ImageUrl = "CarrotCake.jpg",
                            Name = "Carrot Cake",
                            Price = 4.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            ImageUrl = "HazelnutCookie.jpg",
                            Name = "Hazelnut Cookie",
                            Price = 2.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            ImageUrl = "RaspberryChocolateCake.jpg",
                            Name = "Raspberry Chocolate Cake",
                            Price = 6.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            ImageUrl = "LemonCheesecake.jpg",
                            Name = "Lemon Cheesecake",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            ImageUrl = "Macaron.jpg",
                            Name = "Macaron",
                            Price = 2.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 2,
                            ImageUrl = "TripleChocolateCookie.jpg",
                            Name = "Triple Chocolate Cookie",
                            Price = 2.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 2,
                            ImageUrl = "SenSebastianCheesecake.jpg",
                            Name = "SenSebastian Cheesecake",
                            Price = 6.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 2,
                            ImageUrl = "RedVelvetCake.jpg",
                            Name = "Red Velvet Cake",
                            Price = 6.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 2,
                            ImageUrl = "Tiramisu.jpg",
                            Name = "Tiramisu",
                            Price = 5.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 3,
                            ImageUrl = "Ketchup(Packet).jpg",
                            Name = "Ketchup (Packet)",
                            Price = 0.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 3,
                            ImageUrl = "Mayonnaise(Packet).jpg",
                            Name = "Mayonnaise (Packet)",
                            Price = 0.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            ImageUrl = "GarlicMayonnaise(Packet).jpg",
                            Name = "Garlic Mayonnaise (Packet)",
                            Price = 1.29m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 3,
                            ImageUrl = "HotSauce(Packet).jpg",
                            Name = "Hot Sauce (Packet)",
                            Price = 1.29m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 3,
                            ImageUrl = "BarbecueSauce.jpg",
                            Name = "Barbecue Sauce",
                            Price = 2.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 3,
                            ImageUrl = "MustardSauce.jpg",
                            Name = "Mustard Sauce",
                            Price = 1.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            ImageUrl = "RanchSauce.jpg",
                            Name = "Ranch Sauce",
                            Price = 2.29m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            ImageUrl = "BuffaloSauce.jpg",
                            Name = "Buffalo Sauce",
                            Price = 2.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 4,
                            ImageUrl = "LargeFrenchFries.jpg",
                            Name = "Large French Fries",
                            Price = 4.99m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 4,
                            ImageUrl = "MediumFrenchFries.jpg",
                            Name = "Medium French Fries",
                            Price = 3.99m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 4,
                            ImageUrl = "SmallFrenchFries.jpg",
                            Name = "Small French Fries",
                            Price = 2.99m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 4,
                            ImageUrl = "CrispyOnions(8-piece).jpg",
                            Name = "Crispy Onions (8-piece)",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 4,
                            ImageUrl = "CrispyOnions(12-piece).jpg",
                            Name = "Crispy Onions (12-piece)",
                            Price = 7.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 4,
                            ImageUrl = "CrispyOnions(16-piece).jpg",
                            Name = "Crispy Onions (16-piece)",
                            Price = 9.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 4,
                            ImageUrl = "WaffleFries(Large).jpg",
                            Name = "Waffle Fries (Large)",
                            Price = 5.99m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 4,
                            ImageUrl = "WaffleFries(Medium).jpg",
                            Name = "Waffle Fries (Medium)",
                            Price = 4.99m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 4,
                            ImageUrl = "WaffleFries(Small).jpg",
                            Name = "Waffle Fries (Small)",
                            Price = 3.99m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 4,
                            ImageUrl = "2-PieceCrispyTenders.jpg",
                            Name = "2-Piece Crispy Tenders",
                            Price = 6.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 4,
                            ImageUrl = "4-PieceCrispyTenders.jpg",
                            Name = "4-Piece Crispy Tenders",
                            Price = 10.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 5,
                            ImageUrl = "Mixology(Mango).jpg",
                            Name = "Mixology (Mango)",
                            Price = 15.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 5,
                            ImageUrl = "Mixology(Strawberry).jpg",
                            Name = "Mixology (Strawberry)",
                            Price = 12.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 5,
                            ImageUrl = "Mixology(Mint).jpg",
                            Name = "Mixology (Mint)",
                            Price = 18.79m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 5,
                            ImageUrl = "Coca-ColaZeroSugar(Small).jpg",
                            Name = "Coca-Cola Zero Sugar (Small)",
                            Price = 11.99m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 5,
                            ImageUrl = "Coca-ColaZeroSugar(Medium).jpg",
                            Name = "Coca-Cola Zero Sugar (Medium)",
                            Price = 13.29m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 5,
                            ImageUrl = "Coca-ColaZeroSugar(Large).jpg",
                            Name = "Coca-Cola Zero Sugar (Large)",
                            Price = 14.99m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 5,
                            ImageUrl = "Coca-Cola(Small).jpg",
                            Name = "Coca-Cola (Small)",
                            Price = 12.49m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 5,
                            ImageUrl = "Coca-Cola(Medium).jpg",
                            Name = "Coca-Cola (Medium)",
                            Price = 11.79m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 5,
                            ImageUrl = "Coca-Cola(Large).jpg",
                            Name = "Coca-Cola (Large)",
                            Price = 15.49m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 5,
                            ImageUrl = "Fanta(Small).jpg",
                            Name = "Fanta (Small)",
                            Price = 10.99m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 5,
                            ImageUrl = "Fanta(Medium).jpg",
                            Name = "Fanta (Medium)",
                            Price = 12.29m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 5,
                            ImageUrl = "Fanta(Large).jpg",
                            Name = "Fanta (Large)",
                            Price = 13.49m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 5,
                            ImageUrl = "Sprite(Small).jpg",
                            Name = "Sprite (Small)",
                            Price = 11.49m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 5,
                            ImageUrl = "Sprite(Medium).jpg",
                            Name = "Sprite (Medium)",
                            Price = 14.99m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 5,
                            ImageUrl = "Sprite(Large).jpg",
                            Name = "Sprite (Large)",
                            Price = 16.79m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaPeach(Small).jpg",
                            Name = "Fuse Tea Peach (Small)",
                            Price = 10.49m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaPeach(Medium).jpg",
                            Name = "Fuse Tea Peach (Medium)",
                            Price = 12.99m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaPeach(Large).jpg",
                            Name = "Fuse Tea Peach (Large)",
                            Price = 14.49m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 75,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaLemon(Small).jpg",
                            Name = "Fuse Tea Lemon (Small)",
                            Price = 11.29m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 76,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaLemon(Medium).jpg",
                            Name = "Fuse Tea Lemon (Medium)",
                            Price = 13.79m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 77,
                            CategoryId = 5,
                            ImageUrl = "FuseTeaLemon(Large).jpg",
                            Name = "Fuse Tea Lemon (Large)",
                            Price = 15.99m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 78,
                            CategoryId = 5,
                            ImageUrl = "StrawberryMilkshake(Small).jpg",
                            Name = "Strawberry Milkshake (Small)",
                            Price = 17.49m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 79,
                            CategoryId = 5,
                            ImageUrl = "StrawberryMilkshake(Medium).jpg",
                            Name = "Strawberry Milkshake (Medium)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 80,
                            CategoryId = 5,
                            ImageUrl = "StrawberryMilkshake(Large).jpg",
                            Name = "Strawberry Milkshake (Large)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 81,
                            CategoryId = 5,
                            ImageUrl = "CoffeeMilkshake(Small).jpg",
                            Name = "Coffee Milkshake (Small)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 82,
                            CategoryId = 5,
                            ImageUrl = "CoffeeMilkshake(Medium).jpg",
                            Name = "Coffee Milkshake (Medium)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 83,
                            CategoryId = 5,
                            ImageUrl = "CoffeeMilkshake(Large).jpg",
                            Name = "Coffee Milkshake (Large)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 84,
                            CategoryId = 5,
                            ImageUrl = "ChocolateMilkshake(Small).jpg",
                            Name = "Chocolate Milkshake (Small)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 85,
                            CategoryId = 5,
                            ImageUrl = "ChocolateMilkshake(Medium).jpg",
                            Name = "Chocolate Milkshake (Medium)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 86,
                            CategoryId = 5,
                            ImageUrl = "ChocolateMilkshake(Large).jpg",
                            Name = "Chocolate Milkshake (Large)",
                            Price = 0m,
                            Quantity = 1,
                            Size = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 87,
                            CategoryId = 5,
                            ImageUrl = "Water.jpg",
                            Name = "Water",
                            Price = 2.49m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        },
                        new
                        {
                            Id = 88,
                            CategoryId = 5,
                            ImageUrl = "Ayran.jpg",
                            Name = "Ayran",
                            Price = 1.99m,
                            Quantity = 1,
                            Size = 0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Silders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "We offer hamburgers prepared with the freshest and highest quality ingredients in our restaurant. Our aim is to provide our guests with a delicious and healthy dining experience.",
                            ImageUrl = "slider1.jpg",
                            Number = 1,
                            Title = "Who We Are?"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Our mission is to provide the best service to our customers and exceed their expectations. We prioritize customer satisfaction with our hamburgers made with quality ingredients and our sincere service approach.",
                            ImageUrl = "slider2.jpg",
                            Number = 2,
                            Title = "Our Mission"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Our vision is to be an innovative and leading brand in the industry and ensure sustainable growth. We aim to win the admiration of our customers by constantly offering new flavors and experiences.",
                            ImageUrl = "silider3.jpg",
                            Number = 3,
                            Title = "Our Vision"
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "I had a fantastic experience at the restaurant. The burgers were delicious and the service was excellent.",
                            ImageUrl = "clientChef1.jpg",
                            Puan = 5,
                            Title = "Great Experience!"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The burgers here are amazing! I loved every bite. Can't wait to come back again!",
                            ImageUrl = "clientChef2.jpg",
                            Puan = 4,
                            Title = "Amazing Burgers!"
                        },
                        new
                        {
                            Id = 3,
                            Description = "These burgers are hands down the best in town. The taste is unmatched!",
                            ImageUrl = "clientChef3.jpg",
                            Puan = 5,
                            Title = "Best Burgers in Town!"
                        });
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Address", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Contact", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.MenuProduct", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Menu", "Menu")
                        .WithMany("MenuProducts")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Product", "Product")
                        .WithMany("MenuProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Order", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.OrderDetail", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Menu");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Product", b =>
                {
                    b.HasOne("MvcOOPHamburgerProject.Data.Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Menu", b =>
                {
                    b.Navigation("MenuProducts");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.Product", b =>
                {
                    b.Navigation("MenuProducts");
                });

            modelBuilder.Entity("MvcOOPHamburgerProject.Data.Entities.Concrete.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
